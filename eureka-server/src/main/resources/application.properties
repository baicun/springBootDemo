#################### eureka-server 配置 start #################
server.port=999
# eureka-server 实例所在主机名称,并修改 hosts 配置文件
eureka.instance.hostname=eureka-server
# false, 代表不向注册中心注册自己。
eureka.client.register-with-eureka=false
# 注册中心的职责就是维护服务实例，它并不需要去检索服务,设置为 false
eureka.client.fetch-registry=false
# 设置清理的间隔时间，而后这个时间使用的是毫秒单位（默认是60秒:6000）
eureka.server.eviction-interval-timer-in-ms=1000
# 设置为false表示关闭保护模式
eureka.server.enable-self-preservation=false
#################### eureka-server 配置 end #################
#################### eureka-client 配置 start #################
#eureka.client.serviceUrl.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
eureka.client.serviceUrl.defaultZone=http://helloWorld:80/eureka/
# 当前微服务名称
#spring.application.name=helloWorldApplication
## 注册列表显示主机名称
#eureka.instance.instance-id=helloWorld.com
## 使上面的主机名称可以点击
#eureka.instance.prefer-ip-address=true
## 指定服务注册中心的地址
## 微服务客户端之所以可以与 Eureka 之间保持联系，依靠的是心跳机制 # 设置心跳的时间间隔（默认是30秒）
#eureka.instance.lease-renewal-interval-in-seconds: 2
## 如果现在超过了5秒的间隔（默认是90秒）,
## 表示距离上一次发送心跳之后等待下一次发送心跳的间隔时间，如果超过了此间隔时间，则认为该微服务已经宕机了。
#eureka.instance.lease-expiration-duration-in-seconds: 5
# false, 代表不向注册中心注册自己。
#eureka.client.register-with-eureka=false
# 注册中心的职责就是维护服务实例，它并不需要去检索服务,设置为 false
#eureka.client.fetch-registry=false
#################### eureka-client 配置 end #################
# Eureka 安全配置
# 启用安全认证
eureka.security.basic.enabled=true
spring.security.user.name=security
spring.security.user.password=security